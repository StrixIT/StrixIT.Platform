//------------------------------------------------------------------------------
// <auto-generated>
//     This code was not generated by a tool. but for stylecop suppression.
// </auto-generated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;

namespace StrixIT.Platform.Framework.Tests
{
    [TestClass()]
    public class CacheProviderTests
    {
        #region Public Methods

        [TestMethod()]
        public void ClearCacheTest()
        {
            var target = new CacheService();
            var value = GetEntity();
            target["TestEntity2"] = value;
            target.Clear();
            var result = target["Test"];
            Assert.IsNull(result);
        }

        [TestMethod()]
        public void RemoveEntityFromCacheTest()
        {
            var target = new CacheService();
            var value = GetEntity();
            target["TestEntity2"] = value;
            target.Delete("Test");
            var result = target["Test"];
            Assert.IsNull(result);
        }

        [TestMethod()]
        public void SaveAListOfEntitiesInCacheTest()
        {
            var target = new CacheService();
            var value = new List<TestEntity>();

            for (int i = 0; i < 3; i++)
            {
                value.Add(GetEntity());
            }

            target["TestEntityList"] = value;
            var result = target["TestEntityList"] as List<TestEntity>;
            Assert.IsNotNull(result);
        }

        [TestMethod()]
        public void SaveEntityInCacheTest()
        {
            var target = new CacheService();
            var value = GetEntity();
            target["Test"] = value;
            bool result = target["Test"].Equals(value);
            Assert.IsTrue(result);
        }

        #endregion Public Methods

        #region Private Methods

        private static TestEntity GetEntity()
        {
            var entity = new TestEntity();
            entity.Name = "Test";
            entity.Number = 5;
            entity.Value = 2.5;
            entity.Date = DateTime.Now.Date;
            entity.IsActive = true;
            return entity;
        }

        #endregion Private Methods
    }
}